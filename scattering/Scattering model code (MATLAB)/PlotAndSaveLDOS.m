function PlotAndSaveLDOS(LDOS, Energies, foldern, filen, midLine, ls)
%PLOTANDSAVELDOS Plots and saves LDOSes generated by ComputeLDOS (etc.)
%   Inputs:
%       - LDOS: the (normalized) LDOS as a (res,res,length(Energies))
%         "tensor"
%       - Energies: energies associated with the LDOS maps
%       - foldern: string with folder path to desired saving location
%       - filen: string with file name base
%       - midLine: flag for plotting line profiles along the midline
%       - ls: side length of the scan area
%   TO DO:
%       - Variable input argument implementation
%       - Option for close all when saving figures
%       - Optional saving

% Make the save directory
mkdir(foldern);

% How many energy values in the LDOS
N_E = length(Energies);

% Plot and save LDOSes
for Ee = 1:N_E
    
    % Current energy value
    EC = Energies(Ee);
    
    % The plot
    figure;
    side = [0, ls*1e9];
    if max(size(size(LDOS))) == 2
        imagesc(side, side, LDOS)
    else
        imagesc(side, side, squeeze(LDOS(:,:,Ee)))
    end

    title(strcat(num2str(EC), 'eV'))
    xlabel('x, [nm]')
    ylabel('y, [nm]')
    colormap gray
    c = colorbar;
    axis square
    % Unified color scale
    caxis([min(min(min(LDOS))), max(max(max(LDOS)))])
    ylabel(c, 'LDOS, a.u.')
    
    %     pause;

    % Filename: 
    filenFull = strcat(filen, ...
        'E', num2str(Ee), ...
        '.png');
    saveas(gcf, [pwd '\' foldern '\' filenFull])
    
    % TO DO: flag for closing all
%     close all
end


% Midline plot, if necessary
if midLine
    % Initialize midline parameters
    res = size(LDOS,1);
    midInd = floor(res/2);
    
    figure;

    hold on

    for jj = 1:N_E
        plot(linspace(-ls/2*1e9, ls/2*1e9, res), squeeze(LDOS(midInd,:,jj)))
    end
    
    xlabel('x, [nm]')    
    ylabel('LDOS, a.u.')
    set(gca, 'FontSize', 14)
    axis tight
        
    % Legend trickery
    legendCell = strcat(string(num2cell(Energies)), ' eV');
    legend(legendCell, 'Location', 'SouthEast');
        
    title(strcat(num2str(res), 'x', num2str(res), ' points'));
    
    % Save the plot
    saveas(gcf, [pwd '\' foldern '\' filen '_midlines' num2str(res) '.png'])
end


end

